package airports;

import java.io.File;
import java.util.LinkedList;
import java.util.List;
import java.util.Scanner;


public class HandleAirportData {
	
	//List of airports 
	private List<Airports> airports = new LinkedList<Airports>();
	
	
	// Read airports from file and loads them to a list
	public List<Airports> loadData(String pathToFile){
		
		Scanner fileReader = null;
		
		try{
			//System.out.println(new java.io.File("").getAbsolutePath());
			
			fileReader = new Scanner(new File(pathToFile));
			String currLine = null;
			
			while(fileReader.hasNextLine()){
				currLine = fileReader.nextLine();
				String[] columns = currLine.split(",");
				
				//System.out.println(Arrays.deepToString(columns));
				int id = Integer.parseInt(columns[0]);
				String city = columns[2].replace("\"", "");
				String country = columns[3].replace("\"", "");
				String code = columns[4].replace("\"", "");
				
				//System.out.println(id+" " + city + " - " + country + " - " + " " + code );
				
				//Add airport to the list
				Airports airport = new Airports(id, city, country, code);
				this.airports.add(airport);
				
			}
			
		}catch(Exception e){
			e.printStackTrace();
		}finally {
			if(fileReader!=null){
				fileReader.close();
			}
		}
		
		return this.airports;
	}
	
	/*
	 * Linear search algorithm for finding 
	 * 
	 * city code in array of airports
	 * 
	 * */
	
	public Airports findAirportCode(String city){
		
		for(Airports airport : this.airports){
			
			String airportCity = airport.getCity();
			
			if(airportCity.equals(city)){
				return airport;
			}
		}
		
		return null;
	}
	
	//Getter
	public List<Airports> getAirports(){
		return this.airports;
	}

}
