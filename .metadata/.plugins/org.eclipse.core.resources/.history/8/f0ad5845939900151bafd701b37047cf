package module2;

import java.io.File;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import de.fhpotsdam.unfolding.UnfoldingMap;
import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.GeoJSONReader;
import de.fhpotsdam.unfolding.marker.Marker;
import de.fhpotsdam.unfolding.providers.Google;
import de.fhpotsdam.unfolding.utils.MapUtils;
import processing.core.PApplet;

public class LifeExpectancy extends PApplet{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private UnfoldingMap map;
	private List<Feature> countires = null;
	private List<Marker> coutryMarkers = null;
	
	public void setup(){
		// set the size of the map
		size(1200, 800, OPENGL);
		//create new map
		map = new UnfoldingMap(this, new Google.GoogleMapProvider());
		
		// read life expectancy from file 
		//C:\\Users\\cpt2pes\\workspace\\UCSDUnfoldingMaps\\data\\LifeExpectancyWorldBank.csv
		String fileName = "/UCSDUnfoldingMaps/data/LifeExpectancyWorldBank.csv";
		Map<String, Float> lifeExpectancyByCountry = loadLifeExpectancyFromCSV(fileName);
		
		this.countires = GeoJSONReader.loadData(this, "/UCSDUnfoldingMaps/data/countries.geo.json");
		
		// Make the map interactive.
		MapUtils.createDefaultEventDispatcher(this, map);
	}
	
	public void draw(){
		background(0);
		map.draw();
	}
	
	private Map<String, Float> loadLifeExpectancyFromCSV(String fileName){
		
		Map<String, Float> lifeExpMap = new HashMap<String, Float>();
		
		Scanner fileReader = null;
		String line = null;
		
		try{
			fileReader = new Scanner(new File(fileName));
			
			while(fileReader.hasNextLine()){
				
				line = fileReader.nextLine();
				String[] columns = line.split(",");				
				float lifeExp = parseToFloat(columns[5]);
				String countryId = columns[4];
				
				lifeExpMap.put(countryId, lifeExp);
				
				//System.out.println("Line " + " : " + Arrays.deepToString(columns));
			}
			
		}catch (Exception e){
			e.printStackTrace();
		}finally {
			if(fileReader != null){
				fileReader.close();
			}
		}
		
		return lifeExpMap;
	}
	
	private Float parseToFloat(String string){
		
		Float floatVal = (float) 0.0;
		
		if(string.equals("..") || string.equals("") || string.equals(" ") || string.equals(null)){
			floatVal = (float)0;
		}else {
			floatVal = Float.parseFloat(string);
		}
		
		return floatVal;
	}
}
